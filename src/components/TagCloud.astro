---
import { getCollection } from 'astro:content';
import { slugify } from '@components/utils.ts'
import { filterPosts } from '@components/utils.ts';
import type { BlogLocales } from '@i18n/locales';

const currentLocale = Astro.currentLocale;
const blogLocale = `blog-${currentLocale}`;

const allPosts = (await getCollection(blogLocale as BlogLocales));
const displayedPosts = filterPosts(allPosts);

const allTags = displayedPosts.map((tag: any) => tag.data.tag).flat();

const processedTags = allTags.reduce((acc: { [key: string]: number }, tag) => {
    //check if tag exists
    const value = acc[tag] || 0;

    return {
        ...acc,
        [tag]: value + 1
    }
}, {})

const { showCount } = Astro.props;
---
<div class="tag-cloud">
    {
        Object.entries(processedTags).map(([key, val]) => (
            <div class="tag-button">
                <a class="tag-link" href={`tag/${slugify(key)}`}>{key} <span>{showCount && `(${val})`}</span></a>
            </div>
        ))
    }
</div>
<style>
    .tag-cloud{
        display: flex;
        justify-content: center;
        margin-bottom: 10px;
    }
    .tag-button {
        background: rgba(var(--gray-dark));
        border: 2px solid rgba(var(--gray-dark));
        border-radius: 10px;
        margin: 0px 2.5px;
        padding: 0px 4px;
        transition: all 0.15s ease-in-out;
    }
    .tag-link {
        color: rgba(var(--gray-light));
        text-decoration: none;
        transition: all 0.05s ease-in-out;
        span {
            font-size: 16px;
            vertical-align: top;
        }
    }
    .tag-button:hover{
        background: rgba(var(--gray-light));
        .tag-link{
            color: rgba(var(--gray-dark));
        }
    }
</style>