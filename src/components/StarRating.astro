---
interface Props {
	rating: number;
    index: boolean;
}

const { rating, index } = Astro.props;
const grayCount = 5 - rating;
---
{rating > 0 ? (
    <div class={index ? 'index-div' : 'post-div'}>
    {Array.from({ length: rating }).map((_, i) => (
        <svg xmlns="http://www.w3.org/2000/svg" class={`yellow-stars ${index ? 'index-stars' : 'post-stars'}`} viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    ))}{Array.from({ length: grayCount }).map((_, i) => (
        <svg xmlns="http://www.w3.org/2000/svg" class={`gray-stars ${index ? 'index-stars' : 'post-stars'}`} viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    ))}
    </div>
) : ''}

<style>
    .yellow-stars {
        fill: yellow;
    }
    .gray-stars {
        fill: gray;
    }
    .index-stars {
        padding-right: 2px;
        width: 16px;
        height: 16px;
        filter: drop-shadow(2px 2px 6px black)
    }
    .index-div{
        position: absolute;
        top: 10px;
        left: 10px;
        line-height: 1;
    }
    .post-stars {
        padding: 0px 2px;
        width: 32px;
        height: 32px;
    }
    .post-div {
        margin-bottom: 0.5em;
    }
</style>